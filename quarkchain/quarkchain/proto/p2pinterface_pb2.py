# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: quarkchain/proto/p2pinterface.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='quarkchain/proto/p2pinterface.proto',
  package='p2pinterface',
  syntax='proto3',
  serialized_pb=_b('\n#quarkchain/proto/p2pinterface.proto\x12\x0cp2pinterface\".\n\nP2PMessage\x12\x0f\n\x07peer_id\x18\x01 \x01(\t\x12\x0f\n\x07payload\x18\x02 \x01(\x0c\"#\n\x10\x42roadcastMessage\x12\x0f\n\x07payload\x18\x01 \x01(\x0c\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_P2PMESSAGE = _descriptor.Descriptor(
  name='P2PMessage',
  full_name='p2pinterface.P2PMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='peer_id', full_name='p2pinterface.P2PMessage.peer_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='payload', full_name='p2pinterface.P2PMessage.payload', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=53,
  serialized_end=99,
)


_BROADCASTMESSAGE = _descriptor.Descriptor(
  name='BroadcastMessage',
  full_name='p2pinterface.BroadcastMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='payload', full_name='p2pinterface.BroadcastMessage.payload', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=101,
  serialized_end=136,
)

DESCRIPTOR.message_types_by_name['P2PMessage'] = _P2PMESSAGE
DESCRIPTOR.message_types_by_name['BroadcastMessage'] = _BROADCASTMESSAGE

P2PMessage = _reflection.GeneratedProtocolMessageType('P2PMessage', (_message.Message,), dict(
  DESCRIPTOR = _P2PMESSAGE,
  __module__ = 'quarkchain.proto.p2pinterface_pb2'
  # @@protoc_insertion_point(class_scope:p2pinterface.P2PMessage)
  ))
_sym_db.RegisterMessage(P2PMessage)

BroadcastMessage = _reflection.GeneratedProtocolMessageType('BroadcastMessage', (_message.Message,), dict(
  DESCRIPTOR = _BROADCASTMESSAGE,
  __module__ = 'quarkchain.proto.p2pinterface_pb2'
  # @@protoc_insertion_point(class_scope:p2pinterface.BroadcastMessage)
  ))
_sym_db.RegisterMessage(BroadcastMessage)


# @@protoc_insertion_point(module_scope)
